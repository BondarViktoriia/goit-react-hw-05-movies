{"version":3,"file":"static/js/631.ceda46e2.chunk.js","mappings":"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","sources":["components/services/Api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["// https://api.themoviedb.org/3/movie/550?api_key=9384544c410021c8ddd99f4e7b3ff84b\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9384544c410021c8ddd99f4e7b3ff84b';\nconst TRENGING_MOVIES = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(TRENGING_MOVIES, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const moviesMaper = movies => {\n    return movies.map(\n      ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n        id,\n        title,\n        posterPath,\n        releaseDate,\n      })\n    );\n  };\n  return moviesMaper(data.results);\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const actorsMaper = actors => {\n    return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n      id,\n      name,\n      profilePath,\n      character,\n    }));\n  };\n  return actorsMaper(data.cast);\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const reviewsMaper = reviews => {\n    return reviews.map(({ id, author, content }) => ({ id, author, content }));\n  };\n  return reviewsMaper(data.results);\n};\n\nexport const getMovies = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  const moviesMaper = movies => {\n    return movies.map(\n      ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n        id,\n        title,\n        posterPath,\n        releaseDate,\n      })\n    );\n  };\n  return moviesMaper(data.results);\n};\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const MovieDetailsContainer = styled.div`\ndisplay:flex;\njustify-content: center;\n`\nexport const DetailsContainer = styled.div`\n width: 500px;\n margin-left: 40px;\n padding:20px;\n`\nexport const GoBack = styled(NavLink)`\ndisplay: flex;\njustify-content: center;\ntext-decoration: none;\ncolor:black;\ntext-transform:uppercase;\ntext-align: center;\n  padding: 8px 16px;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 24px;\nwidth: 110px;\nmargin: auto;\nmargin-bottom: 30px;\n\n  &.active{\n    color:white;\n    background: rgb(27,28,29);\nbackground: radial-gradient(circle, rgba(27,28,29,1) 0%, rgba(212,19,33,1) 100%);\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active){\n        color:white;\n        background: rgb(27,28,29);\nbackground: radial-gradient(circle, rgba(27,28,29,1) 0%, rgba(212,19,33,1) 100%);\n\n  }\n`\nexport const MovieDetailsImg = styled.img`\nobject-fit: cover;\n    border-radius: 30px;\n`\n\nexport const MovieDetailsTitle = styled.h2`\nfont-size:30px;\nfont-weight:bold;\nmargin: 0;\nmargin-bottom: 20px;\n`\nexport const MovieDetailsDiscription = styled.p`\n\nfont-size:20px;\nmargin: 0;\nmargin-bottom: 20px;\n span{\n    font-weight: bold;\n}\n`\n\nexport const MovieDetailsAdditional = styled.h2`\nfont-size:30px;\nfont-weight:bold;\nmargin: 0;\nmargin-bottom: 20px;\ntext-transform: uppercase;\n`\nexport const AdditionalContainer = styled.div`\ndisplay: block;\njustify-content: center;\nmargin-top:30px;\ntext-align:center;\n`\nexport const AdditionalList = styled.ul`\ndisplay: flex;\n    justify-content: center;\n    gap: 32px;\n    margin-bottom: 32px;\n`\nexport const AdditionalLink = styled(NavLink)`\n width: 120px;\n height: 40px;\n\n\n text-decoration: none;\n text-transform:uppercase;\n font-weight: bold;\n color:black;\ntext-align:center;\nmargin-bottom:30px;\n    display: flex;\n    flex-wrap: wrap;\n    align-content: center;\n\n  &.active{\n    color:white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align:center;\n    background: rgb(27,28,29);\nbackground: radial-gradient(circle, rgba(27,28,29,1) 0%, rgba(212,19,33,1) 100%);\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active){\n        color:white;\n        display: flex;\n    flex-direction: column;\n         justify-content: center;\n             text-align:center;\n        background: rgb(27,28,29);\nbackground: radial-gradient(circle, rgba(27,28,29,1) 0%, rgba(212,19,33,1) 100%);\n\n  }\n\n`","import { getMovieById } from 'components/services/Api';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  MovieDetailsContainer,\n  DetailsContainer,\n  GoBack,\n  MovieDetailsImg,\n  MovieDetailsTitle,\n  MovieDetailsDiscription,\n  MovieDetailsAdditional,\n  AdditionalContainer,\n  AdditionalList,\n  AdditionalLink,\n} from './MovieDetails.styled';\nimport imageNotFound from '../../images/notfound.png';\n\nconst MovieDetails = () => {\n  const [movieById, setMovieById] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(movieById => {\n        setMovieById(movieById);\n        setError(null);\n      })\n      .catch(error => {\n        setError(error);\n        setMovieById(null);\n      });\n  }, [movieId, error]);\n\n  if (!movieById) {\n    return;\n  }\n\n  const { title, posterPath, releaseDate, overview, voteAverage, genres } =\n    movieById;\n  return (\n    <>\n      <GoBack to={backLinkHref}>Go Back</GoBack>\n      <MovieDetailsContainer>\n        <MovieDetailsImg\n          src={\n            posterPath\n              ? `https://image.tmdb.org/t/p/w500/${posterPath}`\n              : imageNotFound\n          }\n          alt={title}\n        />\n        <DetailsContainer>\n          <MovieDetailsTitle>\n            {title} ({new Date(releaseDate).getFullYear()}){' '}\n          </MovieDetailsTitle>\n          <MovieDetailsDiscription>\n            <span>User score:</span> {Math.round(voteAverage * 10)} %{' '}\n          </MovieDetailsDiscription>\n          <MovieDetailsDiscription>\n            <span>Overview:</span> {overview}{' '}\n          </MovieDetailsDiscription>\n          <MovieDetailsDiscription>\n            <span>Genres:</span> {genres.map(genre => genre.name).join(', ')}{' '}\n          </MovieDetailsDiscription>\n        </DetailsContainer>\n      </MovieDetailsContainer>\n      <AdditionalContainer>\n        <MovieDetailsAdditional>Additional Inforamtion</MovieDetailsAdditional>\n        <AdditionalList>\n          <AdditionalLink to=\"cast\" state={{ from: backLinkHref }}>\n            {' '}\n            Cast\n          </AdditionalLink>\n          <AdditionalLink to=\"reviews\" state={{ from: backLinkHref }}>\n            {' '}\n            Reviews\n          </AdditionalLink>\n        </AdditionalList>\n        <Outlet />\n      </AdditionalContainer>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","data","moviesMaper","movies","map","id","title","posterPath","poster_path","releaseDate","release_date","results","getMovieById","movieId","language","genres","overview","voteAverage","vote_average","getCast","actorsMaper","actors","name","profilePath","profile_path","character","cast","getReviews","reviewsMaper","reviews","author","content","getMovies","query","page","include_adult","MovieDetailsContainer","styled","DetailsContainer","GoBack","NavLink","MovieDetailsImg","MovieDetailsTitle","MovieDetailsDiscription","MovieDetailsAdditional","AdditionalContainer","AdditionalList","AdditionalLink","useState","movieById","setMovieById","error","setError","useParams","backLinkHref","useLocation","state","from","useEffect","then","catch","to","src","imageNotFound","alt","Date","getFullYear","Math","round","genre","join"],"sourceRoot":""}