{"version":3,"file":"static/js/526.a9df462c.chunk.js","mappings":"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","sources":["components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.js","components/services/Api.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const TrendingMoviesList = styled.ul`\ndisplay: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    list-style: none;\n    padding: 0px;\n    margin: 0px;\n    justify-content: center;\n\n`\nexport const TrendingMoviesItem = styled.li`\nflex-basis: calc((100% - 60px) / 4);\n    width: 320px;\n    height:480px;\n    border-radius: 10px;\n    transition-property: box-shadow, transform;\n    transition-duration: 200ms;\n    transition-timing-function: cubic-bezier(0.075, 0.82,  0.165, 1);\n   background: rgb(255,0,44);\nbackground: linear-gradient(90deg, rgba(255,0,44,1) 11%, rgba(2,0,36,1) 99%);\n\n    `\nexport const TrendingMoviesImg = styled.img`\n  width:100%;\n    height: 398px;\n    object-fit: cover;\n    border-radius: 5px;\n`\nexport const TrendingMoviesText = styled.p`\nmargin: 0;\npadding:10px;\nfont-weight:bold;\ntext-decoration:none;\n\n`\nexport const TrendingMoviesData = styled.p`\nmargin:0;\nfont-weight:bold;\ntext-decoration:none;\npadding:0px 10px 0px 10px;\n`\nexport const TrendingLink = styled(NavLink)`\ntext-decoration:none;\ncolor:black\n`\n","import {\n  TrendingMoviesList,\n  TrendingLink,\n  TrendingMoviesItem,\n  TrendingMoviesImg,\n  TrendingMoviesText,\n  TrendingMoviesData\n} from './TrendingMovies.styled';\nimport PropTypes from 'prop-types';\nimport imageNotFound from '../../images/notfound.png';\n\nconst TrendingMovies = ({ movies,location }) => {\n  return (\n    <>\n      <TrendingMoviesList>\n        {movies.map(({ id, posterPath, title, releaseDate }) => (\n          <TrendingLink to={`/movies/${id}`} state={{ from: location }}>\n            <TrendingMoviesItem key={id}>\n              <TrendingMoviesImg\n                 src={\n                  posterPath \n                    ? `https://image.tmdb.org/t/p/w500/${posterPath}`\n                    : imageNotFound\n                }\n            \n                alt={title}\n                width=\"320\"\n              />\n\n              <TrendingMoviesText>{title}</TrendingMoviesText>\n              <TrendingMoviesData>\n                {releaseDate ? new Date(releaseDate).getFullYear() : '---'}\n              </TrendingMoviesData>\n            </TrendingMoviesItem>\n          </TrendingLink>\n        ))}\n      </TrendingMoviesList>\n    </>\n  );\n};\n\nTrendingMovies.propTypes = {\n  trending:PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    posterPath: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    title:PropTypes.string.isRequired,\n  }),),\n  location:PropTypes.object.isRequired,\n\n}\n\nexport default TrendingMovies;\n","// https://api.themoviedb.org/3/movie/550?api_key=9384544c410021c8ddd99f4e7b3ff84b\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9384544c410021c8ddd99f4e7b3ff84b';\nconst TRENGING_MOVIES = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(TRENGING_MOVIES, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const moviesMaper = movies => {\n    return movies.map(\n      ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n        id,\n        title,\n        posterPath,\n        releaseDate,\n      })\n    );\n  };\n  return moviesMaper(data.results);\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const actorsMaper = actors => {\n    return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n      id,\n      name,\n      profilePath,\n      character,\n    }));\n  };\n  return actorsMaper(data.cast);\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const reviewsMaper = reviews => {\n    return reviews.map(({ id, author, content }) => ({ id, author, content }));\n  };\n  return reviewsMaper(data.results);\n};\n\nexport const getMovies = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  const moviesMaper = movies => {\n    return movies.map(\n      ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n        id,\n        title,\n        posterPath,\n        releaseDate,\n      })\n    );\n  };\n  return moviesMaper(data.results);\n};\n","import styled from \"styled-components\";\n\nexport const HomeContainer = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1250px;\n`\nexport const HomeTitle = styled.h1`\ntext-transform:uppercase;\nfont-weight:bold;\nbackground: rgb(255,0,44);\nbackground: linear-gradient(90deg, rgba(255,0,44,1) 11%, rgba(2,0,36,1) 99%);\ntext-align:center;\nborder-radius:20px;\n `\n\n","import { getTrendingMovies } from 'components/services/Api';\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\nimport { useEffect, useState } from 'react';\nimport { HomeContainer, HomeTitle } from './Home.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n  const [, setError] = useState(null);\n  useEffect(() => {\n    getTrendingMovies()\n      .then(setTrendingMovies)\n      .catch(error => setError(error));\n  }, []);\n\n  return (\n    <HomeContainer>\n      <main>\n        <HomeTitle>TRENDING MOVIES</HomeTitle>\n        {trendingMovies && (\n          <TrendingMovies movies={trendingMovies} location={location} />\n        )}\n      </main>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n"],"names":["TrendingMoviesList","styled","TrendingMoviesItem","TrendingMoviesImg","TrendingMoviesText","TrendingMoviesData","TrendingLink","NavLink","movies","location","map","id","posterPath","title","releaseDate","to","state","from","src","imageNotFound","alt","width","Date","getFullYear","axios","API_KEY","getTrendingMovies","params","api_key","data","moviesMaper","poster_path","release_date","results","getMovieById","movieId","language","genres","overview","voteAverage","vote_average","getCast","actorsMaper","actors","name","profilePath","profile_path","character","cast","getReviews","reviewsMaper","reviews","author","content","getMovies","query","page","include_adult","HomeContainer","HomeTitle","useState","trendingMovies","setTrendingMovies","useLocation","setError","useEffect","then","catch","error","TrendingMovies"],"sourceRoot":""}